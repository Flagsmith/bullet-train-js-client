{"version":3,"file":"index.js","mappings":"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","sources":["webpack://flagsmith/webpack/universalModuleDefinition","webpack://flagsmith/./node_modules/fast-deep-equal/index.js","webpack://flagsmith/./flagsmith-core.ts","webpack://flagsmith/webpack/bootstrap","webpack://flagsmith/./index.react-native.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"flagsmith\"] = factory();\n\telse\n\t\troot[\"flagsmith\"] = factory();\n})(global, function() {\nreturn ","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","import {IFlagsmith} from \"./types\";\n\nlet _fetch: typeof global.fetch;\nlet AsyncStorage;\nconst FLAGSMITH_KEY = \"BULLET_TRAIN_DB\";\nconst FLAGSMITH_EVENT = \"BULLET_TRAIN_EVENT\";\nconst defaultAPI = 'https://api.flagsmith.com/api/v1/';\nconst deepEqual = require('fast-deep-equal');\n\nconst initError = function (caller) {\n    return \"Attempted to \" + caller + \" a user before calling flagsmith.init. Call flagsmith.init first, if you wish to prevent it sending a request for flags, call init with preventFetch:true.\"\n}\n\nconst Flagsmith = class {\n\n    constructor(props) {\n        if (props.fetch) {\n            _fetch = props.fetch;\n        } else {\n            _fetch = global.fetch;\n        }\n        AsyncStorage = props.AsyncStorage;\n    }\n\n    getJSON = (url:string, method?:\"GET\"|\"POST\"|\"PUT\", body?:BodyInit) => {\n        const { environmentID, headers } = this;\n        const options = {\n            method: method || 'GET',\n            body,\n            headers: {\n                'x-environment-key': environmentID\n            }\n        };\n        if (method && method !== \"GET\")\n            options.headers['Content-Type'] = 'application/json; charset=utf-8'\n\n        if (headers) {\n            Object.assign(options.headers, headers)\n        }\n        return _fetch(url, options)\n            .then(res => {\n                return res.text()\n                    .then((text) => {\n                        let err = text;\n                        try {\n                            err = JSON.parse(text);\n                        } catch (e) {}\n                        return res.ok ? err : Promise.reject(err);\n                    })\n            })\n    };\n\n    getFlags = (resolve?:(v?:any)=>any, reject?:(v?:any)=>any) => {\n        const { onChange, onError, identity, api } = this;\n        let resolved = false;\n        const handleResponse = ({ flags: features, traits }, segments) => {\n            this.withTraits = false;\n            // Handle server response\n            let flags = {};\n            let userTraits = {};\n            features = features || [];\n            traits = traits || [];\n            features.forEach(feature => {\n                flags[feature.feature.name.toLowerCase().replace(/ /g, '_')] = {\n                    id: feature.feature.id,\n                    enabled: feature.enabled,\n                    value: feature.feature_state_value\n                };\n            });\n            traits.forEach(trait => {\n                userTraits[trait.trait_key.toLowerCase().replace(/ /g, '_')] = trait.trait_value\n            });\n            this.oldFlags = {\n                ...this.flags\n            };\n            if (segments) {\n                let userSegments = {};\n                segments.map((s) => {\n                    userSegments[s.name] = s;\n                });\n                this.segments = userSegments;\n            }\n            const flagsEqual = deepEqual(this.flags, flags);\n            const traitsEqual = deepEqual(this.traits, userTraits);\n            this.flags = flags;\n            this.traits = userTraits;\n            this.updateStorage();\n            if (onChange) {\n                onChange(this.oldFlags, {\n                    isFromServer: true,\n                    flagsChanged: !flagsEqual,\n                    traitsChanged: !traitsEqual\n                });\n            }\n        };\n\n        if (identity) {\n            return Promise.all([\n                this.withTraits?\n                    this.getJSON(api + 'identities/', \"POST\", JSON.stringify({\n                        \"identifier\": identity,\n                        traits: Object.keys(this.withTraits).map((k)=>({\n                            \"trait_key\":k,\n                            \"trait_value\": this.withTraits[k]\n                        }))\n                    })):\n                this.getJSON(api + 'identities/?identifier=' + encodeURIComponent(identity)),\n            ])\n                .then((res) => {\n                    // @ts-ignore\n                    handleResponse(res[0], res[1])\n                    if (resolve && !resolved) {\n                        resolved = true;\n                        resolve();\n                    }\n                }).catch(({ message }) => {\n                    onError && onError({ message })\n                });\n        } else {\n            return Promise.all([\n                this.getJSON(api + \"flags/\")\n            ])\n                .then((res) => {\n                    // @ts-ignore\n                    handleResponse({ flags: res[0] }, null)\n                    if (resolve && !resolved) {\n                        resolved = true;\n                        resolve();\n                    }\n                }).catch((err) => {\n                    if (reject && !resolved) {\n                        resolved = true;\n                        reject(err);\n                    }\n                    onError && onError(err)\n                });\n        }\n    };\n\n    analyticsFlags = () => {\n        const { api } = this;\n        if (Object.getOwnPropertyNames(this.evaluationEvent).length !== 0) {\n            return this.getJSON(api + 'analytics/flags/', 'POST', JSON.stringify(this.evaluationEvent))\n                .then((res) => {\n                    const state = this.getState();\n                    this.setState({\n                        ...state,\n                        evaluationEvent: {},\n                    });\n                    this.updateEventStorage();\n                }).catch((err) => {\n                    this.log(\"Exception fetching evaluationEvent\", err);\n                });\n        }\n    };\n\n    analyticsInterval= null\n    api= null\n    cacheFlags= null\n    enableAnalytics= null\n    enableLogs= null\n    environmentID= null\n    evaluationEvent= null\n    flags= null\n    getFlagInterval= null\n    headers= null\n    initialised= null\n    oldFlags= null\n    onChange= null\n    onError= null\n    identity= null\n    segments= null\n    ticks= null\n    timer= null\n    traits= null\n    withTraits= null\n\n    init({\n        environmentID,\n        api = defaultAPI,\n        headers,\n        onChange,\n        cacheFlags,\n        onError,\n        defaultFlags,\n        preventFetch,\n        enableLogs,\n        enableAnalytics,\n        AsyncStorage: _AsyncStorage,\n        state\n    }) {\n\n        return new Promise((resolve, reject) => {\n            this.environmentID = environmentID;\n            this.api = api;\n            this.headers = headers;\n            this.getFlagInterval = null;\n            this.analyticsInterval = null;\n            this.onChange = onChange;\n            this.onError = onError;\n            this.enableLogs = enableLogs;\n            this.enableAnalytics = enableAnalytics ? enableAnalytics : false;\n            this.flags = Object.assign({}, defaultFlags) || {};\n            this.initialised = true;\n            this.ticks = 10000;\n\n\n            this.timer = this.enableLogs ? new Date().valueOf() : null;\n            if (_AsyncStorage) {\n                AsyncStorage = _AsyncStorage;\n            }\n            this.cacheFlags = typeof AsyncStorage !== 'undefined' && cacheFlags;\n            this.setState(state)\n            if (!environmentID) {\n                reject('Please specify a environment id')\n                throw ('Please specify a environment id');\n            }\n\n            AsyncStorage.getItem(FLAGSMITH_EVENT)\n                .then((res)=>{\n                    if (res){\n                        try {\n                            this.evaluationEvent = JSON.parse(res)\n\n                        } catch (e){\n                            this.evaluationEvent = {};\n                        }\n                    } else {\n                        this.evaluationEvent = {};\n                    }\n                    this.analyticsInterval = setInterval(this.analyticsFlags, this.ticks);\n                })\n\n            if (this.enableAnalytics) {\n                if (this.analyticsInterval) {\n                    clearInterval(this.analyticsInterval);\n                }\n\n                AsyncStorage.getItem(FLAGSMITH_EVENT, (err, res) => {\n                    if (res) {\n                        var json = JSON.parse(res);\n                        if (json) {\n                            state = this.getState();\n                            this.log(\"Retrieved events from cache\", res);\n                            this.setState({\n                                ...state,\n                                evaluationEvent: json,\n                            });\n                        }\n                    }\n                });\n            }\n\n            //If the user specified default flags emit a changed event immediately\n            if (cacheFlags) {\n                AsyncStorage.getItem(FLAGSMITH_KEY, (err, res) => {\n                    if (res) {\n                        try {\n                            var json = JSON.parse(res);\n                            if (json && json.api === this.api && json.environmentID === this.environmentID) {\n                                this.setState(json);\n                                this.log(\"Retrieved flags from cache\", json);\n                            }\n\n                            if (this.flags) { // retrieved flags from local storage\n                                if (this.onChange) {\n                                    this.onChange(null, { isFromServer: false });\n                                }\n                                this.oldFlags = this.flags;\n                                resolve(true);\n                                if (!preventFetch) {\n                                    this.getFlags();\n                                }\n                            } else {\n                                if (!preventFetch) {\n                                    this.getFlags(resolve, reject);\n                                } else {\n                                    resolve(true);\n                                }\n                            }\n                        } catch (e) {\n                            this.log(\"Exception fetching cached logs\", e);\n                        }\n                    } else {\n                        if (!preventFetch) {\n                            this.getFlags(resolve, reject)\n                        } else {\n                            if (defaultFlags) {\n                                this.onChange(null, { isFromServer: false });\n                            }\n                            resolve(true);\n                        }\n                    }\n                });\n            } else if (!preventFetch) {\n                this.getFlags(resolve, reject);\n            } else {\n                if (defaultFlags) {\n                    this.onChange(null, { isFromServer: false });\n                }\n                resolve(true);\n            }\n        })\n        .catch(error => onError && onError(error));\n    }\n\n    getAllFlags() {\n        return this.flags;\n    }\n\n    identify(userId, traits) {\n        this.identity = userId;\n        if(traits) {\n            this.withTraits = traits;\n        }\n        if (this.initialised && !this.getFlagInterval) {\n            return this.getFlags();\n        }\n        return Promise.resolve();\n    }\n\n    getState() {\n        return {\n            api: this.api,\n            environmentID: this.environmentID,\n            flags: this.flags,\n            identity: this.identity,\n            segments: this.segments,\n            traits: this.traits,\n            evaluationEvent: this.evaluationEvent,\n        }\n    }\n\n    setState(state) {\n        if (state) {\n            this.initialised = true;\n            this.api = state.api || this.api || defaultAPI;\n            this.environmentID = state.environmentID || this.environmentID;\n            this.flags = state.flags || this.flags;\n            this.identity = state.identity || this.identity;\n            this.segments = state.segments || this.segments;\n            this.traits = state.traits || this.traits;\n            this.evaluationEvent = state.evaluationEvent || this.evaluationEvent;\n        }\n    }\n\n    log(...args) {\n        if (this.enableLogs) {\n            console.log.apply(this, [\"FLAGSMITH:\", new Date().valueOf() - this.timer, \"ms\", ...args]);\n        }\n    }\n\n    updateStorage() {\n        if (this.cacheFlags) {\n            const state = JSON.stringify(this.getState());\n            this.log(\"Setting storage\", state);\n            AsyncStorage.setItem(FLAGSMITH_KEY, state);\n        }\n    }\n\n    updateEventStorage() {\n        if (this.enableAnalytics) {\n            const events = JSON.stringify(this.getState().evaluationEvent);\n            this.log(\"Setting event storage\", events);\n            AsyncStorage.setItem(FLAGSMITH_EVENT, events);\n        }\n    }\n\n    logout() {\n        this.identity = null;\n        this.segments = null;\n        this.traits = null;\n        if (this.initialised && !this.getFlagInterval) {\n            return this.getFlags();\n        }\n        return Promise.resolve();\n    }\n\n    startListening(ticks = 1000) {\n        if (this.getFlagInterval) {\n            clearInterval(this.getFlagInterval);\n        }\n        this.getFlagInterval = setInterval(this.getFlags, ticks);\n    }\n\n    stopListening() {\n        clearInterval(this.getFlagInterval);\n        this.getFlagInterval = null;\n    }\n\n    getSegments() {\n        // noop for now\n        // return this.segments;\n    }\n\n    evaluateFlag = (key) => {\n        if (this.enableAnalytics) {\n            if (!this.evaluationEvent) return;\n            if (this.evaluationEvent[key] === undefined) {\n                this.evaluationEvent[key] = 0;\n            }\n            this.evaluationEvent[key] += 1;\n        }\n        this.updateEventStorage();\n    }\n\n    getValue = (key) => {\n        const flag = this.flags && this.flags[key.toLowerCase().replace(/ /g, '_')];\n        let res = null;\n        if (flag) {\n            res = flag.value;\n        }\n        this.evaluateFlag(key);\n\n        //todo record check for value\n\n        return res;\n    }\n\n    getTrait = (key) => {\n        const trait = this.traits && this.traits[key.toLowerCase().replace(/ /g, '_')];\n        return trait;\n    }\n\n    setTrait = (key, trait_value) => {\n        const { getJSON, identity, api } = this;\n\n        if (!api) {\n            console.error(initError(\"setTrait\"))\n            return\n        }\n\n        const body = {\n            \"identity\": {\n                \"identifier\": identity\n            },\n            \"trait_key\": key,\n            \"trait_value\": trait_value\n        }\n\n        return getJSON(`${api}traits/`, 'POST', JSON.stringify(body))\n            .then(() => {\n                if (this.initialised) {\n                    this.getFlags()\n                }\n            })\n    };\n\n    setTraits = (traits) => {\n        const { getJSON, identity, api } = this;\n\n        if (!api) {\n            console.error(initError(\"setTraits\"))\n            return\n        }\n\n        if (!traits || typeof traits !== 'object') {\n            console.error(\"Expected object for flagsmith.setTraits\");\n        }\n\n        const body = Object.keys(traits).map((key) => (\n            {\n                \"identity\": {\n                    \"identifier\": identity\n                },\n                \"trait_key\": key,\n                \"trait_value\": traits[key]\n            }\n        ))\n\n        return getJSON(`${api}traits/bulk/`, 'PUT', JSON.stringify(body))\n            .then(() => {\n                if (this.initialised) {\n                    this.getFlags()\n                }\n            })\n    };\n\n    incrementTrait = (trait_key, increment_by) => {\n        const { getJSON, identity, api } = this;\n        return getJSON(`${api}traits/increment-value/`, 'POST', JSON.stringify({\n            trait_key,\n            increment_by,\n            identifier: identity\n        }))\n            // @ts-ignore\n            .then(this.getFlags)\n    };\n\n    hasFeature = (key) => {\n        const flag = this.flags && this.flags[key.toLowerCase().replace(/ /g, '_')];\n        let res = false;\n        if (flag && flag.enabled) {\n            res = true;\n        }\n        this.evaluateFlag(key);\n\n        //todo record check for feature\n\n        return res;\n    }\n\n};\n\ntype Config= {fetch?:any, AsyncStorage?:any};\n\nexport default function ({ fetch, AsyncStorage }:Config):IFlagsmith {\n    return new Flagsmith({ fetch, AsyncStorage }) as IFlagsmith;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\nimport core  from './flagsmith-core'\nexport default core({});\nexport const createFlagsmithInstance = ()=>{\n    return core({})\n}\n"],"names":["root","factory","exports","module","define","amd","global","equal","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","_fetch","AsyncStorage","FLAGSMITH_KEY","FLAGSMITH_EVENT","defaultAPI","deepEqual","initError","caller","Flagsmith","props","getJSON","url","method","body","environmentID","headers","options","assign","then","res","text","err","JSON","parse","e","ok","Promise","reject","getFlags","resolve","onChange","onError","identity","api","resolved","handleResponse","segments","features","traits","withTraits","userTraits","forEach","feature","name","toLowerCase","replace","id","enabled","value","feature_state_value","trait","trait_key","trait_value","oldFlags","map","s","flagsEqual","traitsEqual","updateStorage","isFromServer","flagsChanged","traitsChanged","all","stringify","k","encodeURIComponent","catch","message","analyticsFlags","getOwnPropertyNames","evaluationEvent","state","getState","setState","updateEventStorage","log","analyticsInterval","cacheFlags","enableAnalytics","enableLogs","getFlagInterval","initialised","ticks","timer","evaluateFlag","undefined","getValue","flag","getTrait","setTrait","console","error","setTraits","incrementTrait","increment_by","identifier","hasFeature","fetch","init","defaultFlags","preventFetch","_AsyncStorage","Date","getItem","setInterval","clearInterval","json","getAllFlags","this","identify","userId","apply","args","setItem","events","logout","startListening","stopListening","getSegments","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","createFlagsmithInstance"],"sourceRoot":""}